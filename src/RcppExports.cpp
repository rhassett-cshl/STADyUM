// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// simulate_polymerase_cpp
Rcpp::List simulate_polymerase_cpp(int k, int k_min, int k_max, double ksd, int gene_len, double alpha, double beta, double zeta, double zeta_sd, double zeta_max, double zeta_min, int total_cells, int s, int h, double time, double delta_t, int csv_steps_to_record);
RcppExport SEXP _STADyUM_simulate_polymerase_cpp(SEXP kSEXP, SEXP k_minSEXP, SEXP k_maxSEXP, SEXP ksdSEXP, SEXP gene_lenSEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP zetaSEXP, SEXP zeta_sdSEXP, SEXP zeta_maxSEXP, SEXP zeta_minSEXP, SEXP total_cellsSEXP, SEXP sSEXP, SEXP hSEXP, SEXP timeSEXP, SEXP delta_tSEXP, SEXP csv_steps_to_recordSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type k_min(k_minSEXP);
    Rcpp::traits::input_parameter< int >::type k_max(k_maxSEXP);
    Rcpp::traits::input_parameter< double >::type ksd(ksdSEXP);
    Rcpp::traits::input_parameter< int >::type gene_len(gene_lenSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< double >::type zeta(zetaSEXP);
    Rcpp::traits::input_parameter< double >::type zeta_sd(zeta_sdSEXP);
    Rcpp::traits::input_parameter< double >::type zeta_max(zeta_maxSEXP);
    Rcpp::traits::input_parameter< double >::type zeta_min(zeta_minSEXP);
    Rcpp::traits::input_parameter< int >::type total_cells(total_cellsSEXP);
    Rcpp::traits::input_parameter< int >::type s(sSEXP);
    Rcpp::traits::input_parameter< int >::type h(hSEXP);
    Rcpp::traits::input_parameter< double >::type time(timeSEXP);
    Rcpp::traits::input_parameter< double >::type delta_t(delta_tSEXP);
    Rcpp::traits::input_parameter< int >::type csv_steps_to_record(csv_steps_to_recordSEXP);
    rcpp_result_gen = Rcpp::wrap(simulate_polymerase_cpp(k, k_min, k_max, ksd, gene_len, alpha, beta, zeta, zeta_sd, zeta_max, zeta_min, total_cells, s, h, time, delta_t, csv_steps_to_record));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_STADyUM_simulate_polymerase_cpp", (DL_FUNC) &_STADyUM_simulate_polymerase_cpp, 17},
    {NULL, NULL, 0}
};

RcppExport void R_init_STADyUM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_polymerase-class.R
\docType{class}
\name{SimulatePolymerase-class}
\alias{SimulatePolymerase-class}
\alias{SimulatePolymerase}
\alias{simulatePolymerase}
\alias{simulateReadCounts}
\alias{simulateReadCounts,SimulatePolymerase-method}
\alias{simulateAvgReadDensity}
\alias{simulateAvgReadDensity,SimulatePolymerase-method}
\alias{show,SimulatePolymerase-method}
\alias{plotAvgReadDensity}
\alias{plotAvgReadDensity,SimulatePolymerase-method}
\alias{pauseSites}
\alias{probabilityVector}
\alias{combinedCellsData}
\alias{positionMatrix}
\alias{readCounts}
\alias{avgReadDensity}
\title{Class SimulatePolymerase}
\usage{
simulatePolymerase(
  k = 50,
  ksd = 25,
  kMin = 17,
  kMax = 200,
  geneLen = 1950,
  alpha = 1,
  beta = 1,
  zeta = 2000,
  zetaSd = 1000,
  zetaMin = 1500,
  zetaMax = 2500,
  zetaVec = NULL,
  cellNum = 1000,
  polSize = 33,
  addSpace = 17,
  time = 1,
  stepsToRecord = 1
)

simulateReadCounts(object)

\S4method{simulateReadCounts}{SimulatePolymerase}(object)

simulateAvgReadDensity(object)

\S4method{simulateAvgReadDensity}{SimulatePolymerase}(object)

\S4method{show}{SimulatePolymerase}(object)

plotAvgReadDensity(object)

\S4method{plotAvgReadDensity}{SimulatePolymerase}(object)

pauseSites(object)

probabilityVector(object)

combinedCellsData(object)

positionMatrix(object)

readCounts(object)

avgReadDensity(object)
}
\arguments{
\item{k}{an integer value for the mean of pause sites across cells.}

\item{ksd}{a numeric value for the standard deviation of pause sites across
cells.}

\item{kMin}{an integer value for the upper bound of pause sites allowed.}

\item{kMax}{an integer value for the lower bound of pause sites allowed.}

\item{geneLen}{an integer value for the length of the gene.}

\item{alpha}{a numeric value for the initiation rate.}

\item{beta}{a numeric value for the pause release rate.}

\item{zeta}{a numeric value for the mean elongation rate across sites.}

\item{zetaSd}{a numeric value for the standard deviation of pause sites
across sites.}

\item{zetaMin}{a numeric value for the minimum elongation rate.}

\item{zetaMax}{a numeric value for the maximum elongation rate.}

\item{zetaVec}{a character value for the path to the zetaVec file.}

\item{cellNum}{an integer value for the number of cells to simulate.}

\item{polSize}{an integer value for the polymerase II size.}

\item{addSpace}{an integer value for the additional space in addition to
RNAP size.}

\item{time}{a numeric value for the time to simulate.}

\item{stepsToRecord}{an integer value for the number of steps to record in
position matrix.}

\item{object}{a \code{SimulatePolymerase} object}
}
\value{
a \code{SimulatePolymerase} object

a \code{SimulatePolymerase} object
}
\description{
Class \code{SimulatePolymerase} tracks movement of RNAPs along the DNA
templates of a large number of cells. It accepts several key user-specified
parameters, including the initiation rate, pause-escape rate, a constant or
variable elongation rate, the mean and variance of pause sites across cells,
as well as the center-to-center spacing constraint between RNAPs, the number
of cells being simulated, the gene length, and the total time of
transcription. The simulator simply allows each RNAP to move forward or not,
in time slices of 1e-4 minutes, according to the specified position-specific
rate parameters. It assumes that at most one movement of each RNAP can occur
per time slice. The simulator monitors for collisions between adjacent
RNAPs, prohibiting one RNAP to advance if it is at the boundary of the
allowable distance from the next. After running for specified time, it
outputs the position of RNAPs for the last specified number of steps.
}
\section{Slots}{

\describe{
\item{\code{k}}{an integer value for the mean of pause sites across cells.}

\item{\code{ksd}}{a numeric value for the standard deviation of pause sites across
cells.}

\item{\code{kMin}}{an integer value for the upper bound of pause sites allowed.}

\item{\code{kMax}}{an integer value for the lower bound of pause sites allowed.}

\item{\code{geneLen}}{an integer value for the length of the gene.}

\item{\code{alpha}}{a numeric value for the initiation rate.}

\item{\code{beta}}{a numeric value for the pause release rate.}

\item{\code{zeta}}{a numeric value for the mean elongation rate across sites.}

\item{\code{zetaSd}}{a numeric value for the standard deviation of pause sites
across sites.}

\item{\code{zetaMin}}{a numeric value for the minimum elongation rate.}

\item{\code{zetaMax}}{a numeric value for the maximum elongation rate.}

\item{\code{cellNum}}{an integer value for the number of cells to simulate.}

\item{\code{polSize}}{an integer value for the polymerase II size.}

\item{\code{addSpace}}{an integer value for the additional space in addition to
RNAP size.}

\item{\code{time}}{a numeric value for the time to simulate.}

\item{\code{stepsToRecord}}{an integer value for the number of steps to record in
position matrix.}

\item{\code{pauseSites}}{a numeric vector of pause sites}

\item{\code{probabilityVector}}{a numeric vector}

\item{\code{combinedCellsData}}{an integer vector}

\item{\code{positionMatrix}}{a matrix of position of polymerase}

\item{\code{readCounts}}{a numeric vector for read counts}
}}

\examples{
# Create a SimulatePolymerase object
sim <- SimulatePolymerase(
    k=50, ksd=25, kMin=17, kMax=200, geneLen=1950,
    alpha=1, beta=1, zeta=2000, zetaSd=1000, zetaMin=1500, zetaMax=2500,
    zetaVec=NULL, cellNum=1000, polSize=33, addSpace=17, time=1, 
    stepsToRecord=1)
# Print the object
print(sim)
# Create a SimulatePolymerase object
sim <- SimulatePolymerase(
    k=50, ksd=25, kMin=17, kMax=200, geneLen=1950,
    alpha=1, beta=1, zeta=2000, zetaSd=1000, zetaMin=1500, zetaMax=2500,
    zetaVec=NULL, cellNum=1000, polSize=33, addSpace=17, time=1, 
    stepsToRecord=1)
# Simulate read counts
sim <- simulateReadCounts(sim)
# Print the read counts
print(sim)
# Create a SimulatePolymerase object
sim <- SimulatePolymerase(
    k=50, ksd=25, kMin=17, kMax=200, geneLen=1950,
    alpha=1, beta=1, zeta=2000, zetaSd=1000, zetaMin=1500, zetaMax=2500,
    zetaVec=NULL, cellNum=1000, polSize=33, addSpace=17, time=1, 
    stepsToRecord=1)
# Simulate average read density
sim <- simulateAvgReadDensity(sim)
# Print the average read density
print(sim)
# Create a SimulatePolymerase object
sim <- SimulatePolymerase(
    k=50, ksd=25, kMin=17, kMax=200, geneLen=1950,
    alpha=1, beta=1, zeta=2000, zetaSd=1000, zetaMin=1500, zetaMax=2500,
    zetaVec=NULL, cellNum=1000, polSize=33, addSpace=17, time=1, 
    stepsToRecord=1)
# Show the object
show(sim)
# Create a SimulatePolymerase object
sim <- SimulatePolymerase(
    k=50, ksd=25, kMin=17, kMax=200, geneLen=1950,
    alpha=1, beta=1, zeta=2000, zetaSd=1000, zetaMin=1500, zetaMax=2500,
    zetaVec=NULL, cellNum=1000, polSize=33, addSpace=17, time=1, 
    stepsToRecord=1)
# Plot average read density
plotAvgReadDensity(sim)
# Create a SimulatePolymerase object
sim <- SimulatePolymerase(
    k=50, ksd=25, kMin=17, kMax=200, geneLen=1950,
    alpha=1, beta=1, zeta=2000, zetaSd=1000, zetaMin=1500, zetaMax=2500,
    zetaVec=NULL, cellNum=1000, polSize=33, addSpace=17, time=1, 
    stepsToRecord=1)
# Get pause sites
pauseSites <- pauseSites(sim)
# Print the pause sites
print(pauseSites)
# Create a SimulatePolymerase object
sim <- SimulatePolymerase(
    k=50, ksd=25, kMin=17, kMax=200, geneLen=1950,
    alpha=1, beta=1, zeta=2000, zetaSd=1000, zetaMin=1500, zetaMax=2500,
    zetaVec=NULL, cellNum=1000, polSize=33, addSpace=17, time=1, 
    stepsToRecord=1)
# Get probability vector
probabilityVector <- probabilityVector(sim)
# Print the probability vector
print(probabilityVector)
# Create a SimulatePolymerase object
sim <- SimulatePolymerase(
    k=50, ksd=25, kMin=17, kMax=200, geneLen=1950,
    alpha=1, beta=1, zeta=2000, zetaSd=1000, zetaMin=1500, zetaMax=2500,
    zetaVec=NULL, cellNum=1000, polSize=33, addSpace=17, time=1, 
    stepsToRecord=1)
# Get combined cells data
combinedCellsData <- combinedCellsData(sim)
# Print the combined cells data
print(combinedCellsData)
# Create a SimulatePolymerase object
sim <- SimulatePolymerase(
    k=50, ksd=25, kMin=17, kMax=200, geneLen=1950,
    alpha=1, beta=1, zeta=2000, zetaSd=1000, zetaMin=1500, zetaMax=2500,
    zetaVec=NULL, cellNum=1000, polSize=33, addSpace=17, time=1, 
    stepsToRecord=1)
# Get position matrix
positionMatrix <- positionMatrix(sim)
# Print the position matrix
print(positionMatrix)
# Create a SimulatePolymerase object
sim <- SimulatePolymerase(
    k=50, ksd=25, kMin=17, kMax=200, geneLen=1950,
    alpha=1, beta=1, zeta=2000, zetaSd=1000, zetaMin=1500, zetaMax=2500,
    zetaVec=NULL, cellNum=1000, polSize=33, addSpace=17, time=1, 
    stepsToRecord=1)
# Get read counts    
readCounts <- readCounts(sim)
# Print the read counts
print(readCounts)
# Create a SimulatePolymerase object
sim <- SimulatePolymerase(
    k=50, ksd=25, kMin=17, kMax=200, geneLen=1950,
    alpha=1, beta=1, zeta=2000, zetaSd=1000, zetaMin=1500, zetaMax=2500,
    zetaVec=NULL, cellNum=1000, polSize=33, addSpace=17, time=1, 
    stepsToRecord=1)
# Get average read density
avgReadDensity <- avgReadDensity(sim)
# Print the average read density
print(avgReadDensity)
}

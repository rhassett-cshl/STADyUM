% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_polymerase-class.R
\docType{class}
\name{SimulatePolymerase-class}
\alias{SimulatePolymerase-class}
\alias{simulatePolymerase}
\alias{sampleReadCounts}
\alias{show,SimulatePolymerase-method}
\alias{plotPolymeraseDistribution}
\alias{plotPauseSites}
\alias{plotTransitionProbabilities}
\alias{savePlots}
\alias{pauseSites}
\alias{siteProbabilities}
\alias{combinedCellsData}
\alias{positionMatrices}
\alias{finalPositionMatrix}
\alias{parameters}
\alias{readCounts}
\alias{getPositionMatrixAtTime}
\alias{getAvailableTimePoints}
\alias{plotPositionMatrix}
\title{Constructor for SimulatePolymerase object}
\usage{
simulatePolymerase(
  k = 50,
  ksd = 25,
  kMin = 17,
  kMax = 200,
  geneLen = 1950,
  alpha = 1,
  beta = 1,
  zeta = 2000,
  zetaSd = 1000,
  zetaMin = 1500,
  zetaMax = 2500,
  zetaVec = NULL,
  cellNum = 1000,
  polSize = 33,
  addSpace = 17,
  time = 1,
  timesToRecord = NULL
)

sampleReadCounts(object, readDensity = 0.0489)

\S4method{show}{SimulatePolymerase}(object)

plotPolymeraseDistribution(object, file = NULL, width = 8, height = 6)

plotPauseSites(object, file = NULL, width = 8, height = 6)

plotTransitionProbabilities(object, file = NULL, width = 8, height = 6)

savePlots(object, dir = "results", width = 8, height = 6)

pauseSites(object)

siteProbabilities(object)

combinedCellsData(object)

positionMatrices(object)

finalPositionMatrix(object)

parameters(object)

readCounts(object)

getPositionMatrixAtTime(object, timePoint)

getAvailableTimePoints(object)

plotPositionMatrix(
  object,
  timePoint = NULL,
  file = NULL,
  width = 8,
  height = 6
)
}
\arguments{
\item{k}{an integer value for the mean of pause sites across cells.}

\item{ksd}{a numeric value for the standard deviation of pause sites across
cells.}

\item{kMin}{an integer value for the upper bound of pause sites allowed.}

\item{kMax}{an integer value for the lower bound of pause sites allowed.}

\item{geneLen}{an integer value for the length of the gene.}

\item{alpha}{a numeric value for the initiation rate.}

\item{beta}{a numeric value for the pause release rate.}

\item{zeta}{a numeric value for the mean elongation rate across sites.}

\item{zetaSd}{a numeric value for the standard deviation of pause sites
across sites.}

\item{zetaMin}{a numeric value for the minimum elongation rate.}

\item{zetaMax}{a numeric value for the maximum elongation rate.}

\item{zetaVec}{a character value for the path to the zetaVec file.}

\item{cellNum}{an integer value for the number of cells to simulate.}

\item{polSize}{an integer value for the polymerase II size.}

\item{addSpace}{an integer value for the additional space in addition to
RNAP size.}

\item{time}{a numeric value for the time to simulate.}

\item{timesToRecord}{a numeric vector of specific time points to record
position matrices for, or NULL to record no extra position matrices. Final
position matrix is always recorded. Default is NULL.}

\item{object}{A SimulatePolymerase-class object}

\item{readDensity}{A numeric value for the read density within gene body in
\emph{Dukler et al.} (2017) for genes with median expression (i.e., 0.0489).}

\item{file}{Optional file path to save the plot}

\item{width}{Plot width in inches}

\item{height}{Plot height in inches}

\item{dir}{Directory to save the plots (default: "results")}

\item{timePoint}{Optional time point to plot (if NULL, plots the first available time point)}
}
\value{
a \code{SimulatePolymerase} object

The SimulatePolymerase object with read counts sampled given the
readDensity parameter used

A ggplot object showing the distribution of polymerases across the
gene

A ggplot object showing the distribution of pause sites

A ggplot object showing the transition probabilities across the gene

Outputs directory where plots were saved to pdf files

A list containing all simulation parameters including k, ksd, kMin,
kMax, geneLen, alpha, beta, zeta, zetaSd, zetaMin, zetaMax, zetaVec, cellNum,
polSize, addSpace, time, and stepsToRecord

A 2D matrix of polymerase positions for the specified time point

A numeric vector of available time points

A ggplot object showing the position matrix as a heatmap
}
\description{
Class \code{SimulatePolymerase} tracks the movement of RNAPs along the DNA
templates. It contains the parameters for the simulator as well as the
simulator results including the position of RNAPs for the last step, the
pause sites, a probability vector containing probability RNAPs move forward
or not, and a combined cells data vector containing the total number of
RNAPs at each site across all cells

Runs the simulator that tracks the movement of RNAPs along the DNA
templates of a large number of cells. It accepts several key user-specified
parameters, including the initiation rate, pause-escape rate, a constant or
variable elongation rate, the mean and variance of pause sites across cells,
as well as the center-to-center spacing constraint between RNAPs, the number
of cells being simulated, the gene length, and the total time of
transcription. The simulator simply allows each RNAP to move forward or not,
in time slices of 1e-4 minutes, according to the specified position-specific
rate parameters. It assumes that at most one movement of each RNAP can occur
per time slice. The simulator monitors for collisions between adjacent
RNAPs, prohibiting one RNAP to advance if it is at the boundary of the
allowable distance from the next. After running for specified time, it
outputs the position of RNAPs for the last specified number of steps.

Sample read counts from a SimulatePolymerase object. To match our simulated
read counts to reality, we need to compute a scaling factor lambda. One way
of doing it is computing the read density based on real experiments. For
example, we have computed the read density within gene body in
\emph{Dukler et al} (2017) for genes with median expression (i.e., 0.0489).
If we assume the read counts following a Poisson distribution, we can then
sample the read counts with mean equals to the RNAP frequency multiplied by
lambda.

Show method for SimulatePolymerase object in human readable format
including summary statistics

Plot the distribution of polymerases across the gene.

Plot the distribution of pause sites across the gene.

Plot the transition probabilities across the gene.

Save all plots to files.

Accessor for the pause sites numeric vector from a SimulatePolymerase object.

Accessor for the probability numeric matrix from a SimulatePolymerase object.
The matrix has dimensions (sites x cells) where each element represents the
transition probability for a specific site and cell.

Accessor for the combined cells data numeric vector from a
SimulatePolymerase object.

Accessor for the position matrices from a SimulatePolymerase object.

Accessor for the final position matrix from a SimulatePolymerase object.
This represents the last state of the simulation.

Accessor for the simulation parameters from a SimulatePolymerase object.

Accessor for the read counts numeric vector sampled from a
SimulatePolymerase object.

Get the position matrix for a specific time point from a SimulatePolymerase object.

Get all available time points from a SimulatePolymerase object.

Plot the position matrix as a heatmap showing polymerase positions across
sites and cells.
}
\section{Slots}{

\describe{
\item{\code{k}}{an integer value for the mean of pause sites across cells.}

\item{\code{ksd}}{a numeric value for the standard deviation of pause sites across
cells.}

\item{\code{kMin}}{an integer value for the upper bound of pause sites allowed.}

\item{\code{kMax}}{an integer value for the lower bound of pause sites allowed.}

\item{\code{geneLen}}{an integer value for the length of the gene.}

\item{\code{alpha}}{a numeric value for the initiation rate.}

\item{\code{beta}}{a numeric value for the pause release rate.}

\item{\code{zeta}}{a numeric value for the mean elongation rate across sites.}

\item{\code{zetaSd}}{a numeric value for the standard deviation of pause sites
across sites.}

\item{\code{zetaMin}}{a numeric value for the minimum elongation rate.}

\item{\code{zetaMax}}{a numeric value for the maximum elongation rate.}

\item{\code{zetaVec}}{a character value for the path to the zetaVec file.}

\item{\code{cellNum}}{an integer value for the number of cells to simulate.}

\item{\code{polSize}}{an integer value for the polymerase II size.}

\item{\code{addSpace}}{an integer value for the additional space in addition to
RNAP size.}

\item{\code{time}}{a numeric value for the time to simulate.}

\item{\code{timesToRecord}}{a numeric vector of specific time points to record
position matrices for, or NULL to record no extra position matrices. Final
position matrix is always recorded. Default is NULL.}

\item{\code{pauseSites}}{a numeric vector of pause sites}

\item{\code{siteProbabilities}}{a numeric matrix representing the probability that
the polymerase move forward or not at each site for each cell (sites x cells)}

\item{\code{combinedCellsData}}{an integer vector representing the total number of
RNAPs at each site across all cells}

\item{\code{positionMatrices}}{a list of position matrices}

\item{\code{finalPositionMatrix}}{a matrix representing the final position matrix}

\item{\code{readCounts}}{a numeric vector for read counts per nucleotide}
}}

\examples{
# Create a SimulatePolymerase object
sim <- SimulatePolymerase(
    k=50, ksd=25, kMin=17, kMax=200, geneLen=1950,
    alpha=1, beta=1, zeta=2000, zetaSd=1000, zetaMin=1500, zetaMax=2500,
    zetaVec=NULL, cellNum=1000, polSize=33, addSpace=17, time=1, 
    timesToRecord=NULL)
# Create a SimulatePolymerase object with specific time points recorded
sim2 <- SimulatePolymerase(
    k=50, ksd=25, kMin=17, kMax=200, geneLen=1950,
    alpha=1, beta=1, zeta=2000, zetaSd=1000, zetaMin=1500, zetaMax=2500,
    zetaVec=NULL, cellNum=1000, polSize=33, addSpace=17, time=1, 
    timesToRecord=c(0.5, 1.0))
# Create a SimulatePolymerase object
sim <- SimulatePolymerase(
    k=50, ksd=25, kMin=17, kMax=200, geneLen=1950,
    alpha=1, beta=1, zeta=2000, zetaSd=1000, zetaMin=1500, zetaMax=2500,
    zetaVec=NULL, cellNum=1000, polSize=33, addSpace=17, time=1, 
    timesToRecord=NULL)
# Sample read counts per nucleotide
sim <- sampleReadCounts(sim)
# Print the read counts per nucleotide
print(readCounts(sim))
# Create a SimulatePolymerase object
sim <- SimulatePolymerase(
    k=50, ksd=25, kMin=17, kMax=200, geneLen=1950,
    alpha=1, beta=1, zeta=2000, zetaSd=1000, zetaMin=1500, zetaMax=2500,
    zetaVec=NULL, cellNum=1000, polSize=33, addSpace=17, time=1, 
    timesToRecord=c(0.5, 1.0))
# Show the object
show(sim)
# Create a SimulatePolymerase object
sim <- SimulatePolymerase(
    k=50, ksd=25, kMin=17, kMax=200, geneLen=1950,
    alpha=1, beta=1, zeta=2000, zetaSd=1000, zetaMin=1500, zetaMax=2500,
    zetaVec=NULL, cellNum=1000, polSize=33, addSpace=17, time=1, 
    timesToRecord=c(0.5, 1.0))
# Plot polymerase distribution
plotPolymeraseDistribution(sim)
# Create a SimulatePolymerase object
sim <- SimulatePolymerase(
    k=50, ksd=25, kMin=17, kMax=200, geneLen=1950,
    alpha=1, beta=1, zeta=2000, zetaSd=1000, zetaMin=1500, zetaMax=2500,
    zetaVec=NULL, cellNum=1000, polSize=33, addSpace=17, time=1, 
    timesToRecord=NULL) 
# Plot pause site distribution
plotPauseSites(sim)
# Create a SimulatePolymerase object
sim <- SimulatePolymerase(
    k=50, ksd=25, kMin=17, kMax=200, geneLen=1950,
    alpha=1, beta=1, zeta=2000, zetaSd=1000, zetaMin=1500, zetaMax=2500,
    zetaVec=NULL, cellNum=1000, polSize=33, addSpace=17, time=1, 
    timesToRecord=NULL)
# Plot transition probabilities
plotTransitionProbabilities(sim)
# Create a SimulatePolymerase object
sim <- SimulatePolymerase(
    k=50, ksd=25, kMin=17, kMax=200, geneLen=1950,
    alpha=1, beta=1, zeta=2000, zetaSd=1000, zetaMin=1500, zetaMax=2500,
    zetaVec=NULL, cellNum=1000, polSize=33, addSpace=17, time=1, 
    timesToRecord=c(0.5, 1.0))
# Save plots
savePlots(sim)
# Create a SimulatePolymerase object
sim <- SimulatePolymerase(
    k=50, ksd=25, kMin=17, kMax=200, geneLen=1950,
    alpha=1, beta=1, zeta=2000, zetaSd=1000, zetaMin=1500, zetaMax=2500,
    zetaVec=NULL, cellNum=1000, polSize=33, addSpace=17, time=1, 
    timesToRecord=NULL)
# Get pause sites
pauseSites <- pauseSites(sim)
# Print the pause sites
print(pauseSites)
# Create a SimulatePolymerase object
sim <- SimulatePolymerase(
    k=50, ksd=25, kMin=17, kMax=200, geneLen=1950,
    alpha=1, beta=1, zeta=2000, zetaSd=1000, zetaMin=1500, zetaMax=2500,
    zetaVec=NULL, cellNum=1000, polSize=33, addSpace=17, time=1, 
    timesToRecord=NULL)
# Get probability matrix
siteProbabilities <- siteProbabilities(sim)
# Print the probability matrix dimensions
print(dim(siteProbabilities))
# Create a SimulatePolymerase object
sim <- SimulatePolymerase(
    k=50, ksd=25, kMin=17, kMax=200, geneLen=1950,
    alpha=1, beta=1, zeta=2000, zetaSd=1000, zetaMin=1500, zetaMax=2500,
    zetaVec=NULL, cellNum=1000, polSize=33, addSpace=17, time=1, 
    timesToRecord=NULL)
# Get combined cells data
combinedCellsData <- combinedCellsData(sim)
# Print the combined cells data
print(combinedCellsData)
# Create a SimulatePolymerase object
sim <- SimulatePolymerase(
    k=50, ksd=25, kMin=17, kMax=200, geneLen=1950,
    alpha=1, beta=1, zeta=2000, zetaSd=1000, zetaMin=1500, zetaMax=2500,
    zetaVec=NULL, cellNum=1000, polSize=33, addSpace=17, time=1, 
    timesToRecord=c(0.5, 1.0))
# Get position matrices
positionMatrices <- positionMatrices(sim)
# Print the position matrices
print(positionMatrices)
# Create a SimulatePolymerase object
sim <- SimulatePolymerase(
    k=50, ksd=25, kMin=17, kMax=200, geneLen=1950,
    alpha=1, beta=1, zeta=2000, zetaSd=1000, zetaMin=1500, zetaMax=2500,
    zetaVec=NULL, cellNum=1000, polSize=33, addSpace=17, time=1, 
    timesToRecord=c(0.5, 1.0))
# Get final position matrix
finalMatrix <- finalPositionMatrix(sim)
# Print the final position matrix
print(finalMatrix)
# Create a SimulatePolymerase object
sim <- SimulatePolymerase(
    k=50, ksd=25, kMin=17, kMax=200, geneLen=1950,
    alpha=1, beta=1, zeta=2000, zetaSd=1000, zetaMin=1500, zetaMax=2500,
    zetaVec=NULL, cellNum=1000, polSize=33, addSpace=17, time=1, 
    timesToRecord=c(0.5, 1.0))
# Get parameters
parameters <- parameters(sim)
# Print the parameters
print(parameters)
# Create a SimulatePolymerase object
sim <- SimulatePolymerase(
    k=50, ksd=25, kMin=17, kMax=200, geneLen=1950,
    alpha=1, beta=1, zeta=2000, zetaSd=1000, zetaMin=1500, zetaMax=2500,
    zetaVec=NULL, cellNum=1000, polSize=33, addSpace=17, time=1, 
    timesToRecord=NULL)
# Get read counts    
readCounts <- readCounts(sim)
# Print the read counts
print(readCounts)
# Create a SimulatePolymerase object
sim <- SimulatePolymerase(
    k=50, ksd=25, kMin=17, kMax=200, geneLen=1950,
    alpha=1, beta=1, zeta=2000, zetaSd=1000, zetaMin=1500, zetaMax=2500,
    zetaVec=NULL, cellNum=1000, polSize=33, addSpace=17, time=1, 
    timesToRecord=c(0.5, 1.0))
# Get position matrix for time 0.5
posMatrix <- getPositionMatrixAtTime(sim, 0.5)
# Print the position matrix
print(posMatrix)
# Create a SimulatePolymerase object
sim <- SimulatePolymerase(
    k=50, ksd=25, kMin=17, kMax=200, geneLen=1950,
    alpha=1, beta=1, zeta=2000, zetaSd=1000, zetaMin=1500, zetaMax=2500,
    zetaVec=NULL, cellNum=1000, polSize=33, addSpace=17, time=1, 
    timesToRecord=NULL)
# Get available time points
availableTimes <- getAvailableTimePoints(sim)
# Print the available time points
print(availableTimes)
# Create a SimulatePolymerase object
sim <- SimulatePolymerase(
    k=50, ksd=25, kMin=17, kMax=200, geneLen=1950,
    alpha=1, beta=1, zeta=2000, zetaSd=1000, zetaMin=1500, zetaMax=2500,
    zetaVec=NULL, cellNum=1000, polSize=33, addSpace=17, time=1, 
    timesToRecord=c(0.5, 1.0))
# Plot position matrix
plotPositionMatrix(sim)
}
